{"version":3,"sources":["index.js"],"names":["photoId","setInterval","window","location","hash","UnsplashImage","url","key","id","className","src","alt","Collage","React","useState","images","setImages","loaded","setIsLoaded","useEffect","fetchImages","count","apiRoot","accessKey","axios","get","then","res","data","catch","error","console","log","dataLength","next","hasMore","loader","map","image","index","urls","regular","ReactDOM","render","document","getElementById"],"mappings":"uLAMIA,G,MAAU,GAEdC,aAAY,WACRC,OAAOC,SAASC,KAAO,IAAMJ,EAC7BA,MAHQ,KAMZ,IAAMK,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,GAAb,OACpB,qBAAKC,UAAU,aAAuBD,GAAIA,EAA1C,SACE,qBAAKE,IAAKJ,EAAKK,IAAI,YADYJ,IAK/BK,EAAU,WAAO,IAAD,EACUC,IAAMC,SAAS,IADzB,mBACXC,EADW,KACHC,EADG,OAEYH,IAAMC,UAAS,GAF3B,mBAEXG,EAFW,KAEHC,EAFG,KAIlBL,IAAMM,WAAU,WACdC,MACC,IAEH,IAAMA,EAAc,WAAiB,IAAhBC,EAAe,uDAAP,GACrBC,EAAU,2BACVC,EACJ,8CAEFC,IACGC,IADH,UACUH,EADV,oCAC6CC,EAD7C,kBACgEF,EADhE,2BAEGK,MAAK,SAAAC,GACJX,EAAU,GAAD,mBAAKD,GAAL,YAAgBY,EAAIC,QAC7BV,GAAY,MACXW,OAAM,SAAAC,GACPC,QAAQC,IAAIF,GACZ9B,EAAU,MAIhB,OACE,qBAAKS,UAAU,qCAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SAEE,cAAC,IAAD,CACEwB,WAAYlB,EACZmB,KAAM,kBAAMd,EAAY,IACxBe,SAAS,EACTC,OACE,qBACE1B,IAAI,mDACJC,IAAI,YAPV,SAWE,qBAAKF,UAAU,aAAf,SACGQ,EACGF,EAAOsB,KAAI,SAACC,EAAOC,GAAR,OACT,cAAClC,EAAD,CACEC,IAAKgC,EAAME,KAAKC,QAEhBjC,GAAI+B,GADCA,MAIT,cASlBG,IAASC,OAAO,cAAC/B,EAAD,IAAagC,SAASC,eAAe,U","file":"static/js/main.5ea8a2c5.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport ReactDOM from 'react-dom';\nimport './index.css'; \n\nlet photoId = 0\nlet delay = 1000 * 10; // 10 seconds each photo\nsetInterval(function() {\n    window.location.hash = \"#\" + photoId;\n    photoId++;\n}, delay);\n\nconst UnsplashImage = ({ url, key, id }) => (\n  <div className=\"image-item\" key={key} id={id}>\n    <img src={url} alt=\"ninth!\"/>\n  </div>\n);\n\nlet Collage = () => {\n  const [images, setImages] = React.useState([]);\n  const [loaded, setIsLoaded] = React.useState(false);\n\n  React.useEffect(() => {\n    fetchImages();\n  }, []);\n\n  const fetchImages = (count = 10) => {\n    const apiRoot = \"https://api.unsplash.com\";\n    const accessKey =\n      \"SFIrkba9uSEltEg-2XYr5v8QM4GkKdlEynLaQ1SLquA\";\n\n    axios\n      .get(`${apiRoot}/photos/random?client_id=${accessKey}&count=${count}&orientation=landscape`)\n      .then(res => {\n        setImages([...images, ...res.data]);\n        setIsLoaded(true);\n      }).catch(error => {\n        console.log(error);\n        photoId = 0;\n      });\n  };\n\n  return (\n    <div className=\"hero is-fullheight is-bold is-info\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n\n          <InfiniteScroll\n            dataLength={images}\n            next={() => fetchImages(5)}\n            hasMore={true}\n            loader={\n              <img\n                src=\"https://9th-studio.github.io/assets/img/logo.png\"\n                alt=\"loading\"\n              />\n            }\n          >\n            <div className=\"image-grid\">\n              {loaded\n                ? images.map((image, index) => (\n                    <UnsplashImage\n                      url={image.urls.regular}\n                      key={index}\n                      id={index}\n                    />\n                  ))\n                : \"\"}\n            </div>\n          </InfiniteScroll>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<Collage />, document.getElementById(\"root\"));\n"],"sourceRoot":""}